// GENERATED FILE, EDITS WILL BE LOST
== Upmpdcli configuration 

=== Upmpdcli general parameters 

[[logfilename]]
logfilename:: Log file
name. Defaults to stderr. This can also be specified as -d
logfilename.

[[loglevel]]
loglevel:: Log
level. Can also be specified as -l loglevel.

[[upnplogfilename]]
upnplogfilename:: Log file name for the low level UPnP lib (libnpupnp). This log is not active if this variable is not set at all. Use an empty value for
the messages to go to stderr.

[[upnploglevel]]
upnploglevel:: Log level for the low level UPnP lib. For historical reasons the matching values are 1 less than equivalent values for the
upmpdcli log. 4 is very verbose.

[[pkgdatadir]]
pkgdatadir:: XML and other constant data storage
directory. Default: '$prefix/share/upmpdcli' (e.g.: '/usr/share/upmpdcli').


[[pidfile]]
pidfile:: Name of the lock file used to store the current process pid. Only used if the process is launched by user root. Used by the init system, and to avoid
multiple instances. The only reason to change the value is if you actually want to have several
instances running (also change cachedir in this case).

=== UPnP network parameters 

[[upnpiface]]
upnpiface:: Network interface(s) to use for UPnP. This can be left empty to use the first found suitable interface, or set to a single "*"
character for using all interfaces. Else set it to a space-separated list of interface names (use
double quotes if the names have embedded space characters).

[[upnpip]]
upnpip:: IP V4 address to use for UPnP,
alternative to using an interface name. 

[[upnpport]]
upnpport:: Port number
used for UPnP. libupnp/pupnp defaults to using the first
free port after 49152. Note that clients do not need to know about the
value, which is automatically discovered.

[[useipv6]]
useipv6:: Enable use of IPV6. By default we only use IPV4.

=== Media Renderer parameters 

[[friendlyname]]
friendlyname:: "Friendly Name" for the
Media Renderer. This will be displayed by most Control
Points to identify the Renderer. Some OpenHome Control Points may display
the 'ohproductroom' value instead.

[[avfriendlyname]]
avfriendlyname:: Specific friendly name for the UPnP/AV Media Renderer. The default is to append "-av" to the friendlyname value.

[[upnpav]]
upnpav:: Enable UPnP AV services (0/1). This is set by default, but it may useful to switch it off to avoid cluttering the Renderer
choices if you only use OpenHome.

[[openhome]]
openhome:: Enable OpenHome services (0/1). This defaults to 1, as OpenHome queuing is superior for most usages. There should be little
reason to turn it off.

[[lumincompat]]
lumincompat:: Disable the OpenHome Credentials service. At some point, this was necessary to enable Lumin to see upmpdcli instances: for some
unknown reason, Lumin 1.10 did not discover upmpdcli with Credentials enabled.

[[ohinfotexttodata]]
ohinfotexttodata:: Store metadata into the OpenHome "metatext" variable. The OpenHome Info service are supposed to hold different data,
mostly for radios, with permanent radio data (icon, url, radio name) set
in the "Metadata" variable, and information about the current title recorded
in the "Metatext" variable. Setting this option will have upmpdcli store
any non-empty Metatext data in the Metadata variable. This will help some
players display the album art for the current title (e.g. Kazoo).

[[checkcontentformat]]
checkcontentformat:: Check that
input format is supported. Extract the protocolinfo
information from the input metadata and check it against our supported
formats. Set this option to 0 if a control point or media server sends
good audio data with bad metadata.

[[iconpath]]
iconpath:: Path to the Renderer icon. The image will be displayed by Control Points which support
it. The UPnP protocol has provisions for a renderer to send the URL to a
descriptive icon as part of the device description. Due to current (and
probably permanent) *upmpdcli* limitations, the image file *must* be a
64x64 32 bits-per-pixel png file. Default: '$pkgdatadir/icon.png'.
The icon will only be read once, when upmpdcli starts
up.

[[saveohcredentials]]
saveohcredentials:: Save the streaming
services login parameters to disk. This allows sharing the
password with the upmpdcli media server streaming service proxy, if you
are also using it. Avoids having to enter the password in the regular
configuration file. Depending on your situation, you may see this as a
security risk. The default is true, because I don't see this as a real
issue in the general case.

[[opensslcmd]]
opensslcmd:: Path to the openssl command The OHCredentials service needs openssl 1.1.x or newer.
Path to the openssl command to use if the system one (in /usr/bin) is too
old. Not set by default.

[[cachedir]]
cachedir:: Directory used to store cached
data Only used for the OpenHome queue metadata for now.
The default value is ~/.cache/upmpdcli for normal users or
/var/cache/upmpdcli when upmpdcli is started as root.

[[presentationhtml]]
presentationhtml:: Path to the presentation HTML
document You can change it to replace the default
presentation page. The page will only be read once, when upmpdcli starts
up. It can't presently be used for status updates (but I guess that you
could put a redirect in there, to something more dynamic served by a real
HTTP server). Default: '$pkgdatadir/presentation.html'.

[[enablel16]]
enablel16:: Advertise L16 format support L16 is a raw linear 16 bits audio stream and the source of many
issues because it does not include identifying information. It used to be
disabled by default, because of an mpd bug resulting in a lot of noise. It's
now on by default, but can still be disabled if needed. It seems that it
sometimes interfers badly with the win10 "cast to device" feature, so you may
try to turn it off if you have problems with this.

=== MPD parameters 

[[mpdhost]]
mpdhost:: Host MPD runs on. Defaults to localhost. This can also be specified as -h
host

[[mpdport]]
mpdport:: IP port used by
MPD Can also be specified as -p port. Defaults to the
normal MPD port, 6600

[[mpdpassword]]
mpdpassword:: MPD
password. Password for connecting to MPD (only necessary
if password access is enabled in the MPD configuration
file).

[[mpdtimeoutms]]
mpdtimeoutms:: MPD
connection timeout in milliseconds. If this is not zero,
dialogs with mpd will timeout after the value. This will allow upmpdcli
to stay responsive (return errors) if MPD ever becomes
stuck.

[[ownqueue]]
ownqueue:: Set if we own the MPD
queue. If this is set (on by default), we own the MPD
queue and will fearlessly clear it. Can also be specified as -q
0|1.

=== Audio control hooks 

[[onstart]]
onstart:: Command to run when playback is
about to begin. Specify the full path to the program,
e.g. /usr/bin/logger.

[[onplay]]
onplay:: Command to run when MPD state
switches to "PLAY".   Specify the full path to the program,
e.g. /usr/bin/logger.

[[onpause]]
onpause:: Command to run when MPD state
switches to "PAUSE".   Specify the full path to the program,
e.g. /usr/bin/logger.

[[onstop]]
onstop:: Command to run when MPD state switches to
"STOP". Specify the full path to the program,
e.g. /usr/bin/logger.

[[onstandby]]
onstandby:: Command to run when the setstandby
action is called. Specify the full path to the program. It
is called with one 0/1 argument to change the standby state (1 for activating
standby), and with no argument to query the state. In all cases, it should
print the standby state (0/1) to stdout before exiting.

[[externalvolumecontrol]]
externalvolumecontrol:: Use external command
to manage the the sound volume (0/1). This is used in the
case where MPD is unable to control the volume, but some other command
can, for example if you have an external amp on which it is possible to
set and read the volume through scripts. If set, the calls to MPD to set
and read the volume will be replaced by executions of 'onvolumechange'
and 'getexternalvolume'

[[getexternalvolume]]
getexternalvolume:: Command to run for reading
the sound volume. The command should write a 0-100 numeric
value to stdout.

[[onvolumechange]]
onvolumechange:: Command to run to set the
volume. Used when 'externalvolumecontrol' is set.
Specify the full path to the program, which is called with the volume as
the first argument, e.g. /some/script 85.

=== UPnP/AV tweaking 

[[avtautoplay]]
avtautoplay:: Automatically fake a Play command when track is set. The UPnP/AV SetAVTransportURI, used to set the track to play,
normally does not change the current transport state: an explicit Play
command is required to start playing if the transport was
stopped. Setting this parameter will synthetize a Play command after
receiving SetAVTransportURI. This is needed by some control points which
do not send the Play command.

=== OpenHome parameters 

[[ohproductroom]]
ohproductroom:: The name of the room where
the Product is located. Set to "Main Room" by default,
displayed in place of the "friendly name" by some control points.
ProductRoom is used to group the Product with other related Products in
the same physical room (e.g. a source with a pre-amp). Products which are
physically linked must always share the same ProductRoom
name.

[[radiolist]]
radiolist:: Path to an external file with radio definitions. Radio stations can be defined in this file (main
configuration file), or in an external file (or both). Using an external
file can ease distribution to multiple machines, makes things clearer and
is now the default.  See the distributed file (name below) for
information on how to define a radio station. In case you want to define
radios in the main configuration file, they MUST occur at the end of the
file (because they are defined as subsections, the last of which extends
to the end of the file).

[[radioscripts]]
radioscripts:: Radio metadata scripts directory. Path of a directory where the scripts used for fetching the
channel metadata are located. The default is
/usr/share/upmpdcli/radio_scripts. Note that the scripts are always first
looked for in the locations defined by $PATH.

[[ohmanufacturername]]
ohmanufacturername:: Manufacturer
name.  

[[ohmanufacturerinfo]]
ohmanufacturerinfo:: Manufacturer
information.  

[[ohmanufacturerurl]]
ohmanufacturerurl:: URL for manufacturer
web site.  

[[ohmanufacturerimageuri]]
ohmanufacturerimageuri:: Uri for
manufacturer's logo.  

[[ohmodelname]]
ohmodelname:: Model name. 

[[ohmodelinfo]]
ohmodelinfo:: Model information. 

[[ohmodelurl]]
ohmodelurl:: URL for model web
site. 

[[ohmodelimageuri]]
ohmodelimageuri:: Uri for model's
icon.  

[[ohproductname]]
ohproductname:: User-visible product
name. By default this is set to ModelName. 

[[ohproductinfo]]
ohproductinfo:: Product information.
 

[[ohproducturl]]
ohproducturl:: URL for product web
site. This may be the UPnP presentation page. 

[[ohproductimageuri]]
ohproductimageuri:: Uri for product
image.  

[[ohmetapersist]]
ohmetapersist:: Save queue
metadata to disk (0/1). This allows persistence of the
metadata information across restarts, the default is 1, and there is no
reason to turn it off.

[[ohmetasleep]]
ohmetasleep:: Mimimum
interval (Seconds) between two cache saves. Increasing this
may improve playlist load speed on a slow device. The default is to start
a new save as soon as the previous one is done (if the list changed again
inbetween).

=== Media Server general parameters 

[[msfriendlyname]]
msfriendlyname:: Friendly name for the
Media Server (if enabled). The default is to append
"-mediaserver" to the friendlyname value.

[[msrootalias]]
msrootalias:: Media Server root alias Object ID. Use the specified Media Server container as root. The Control Point will directly show this
container when connecting, which will avoid having to skip over the top levels if you don't use
them. (E.g. the active plugin list if there is only one plugin). The value is an UPnP object
ID, which is unfortunately not generally obtainable from Control Points. However the commonly
useful values are simple:
- `0$uprcl$` Direct access to the Local Media root
- `0$uprcl$folders` Direct access to the Local Media [folders] tree.

An alias must begin with `0` (which is the mandatory UPnP root object ID), followed by
`$pluginname$` where _pluginname_ could be any subdirectory of `/usr/share/upmpdcli/cdplugins`
except `pycommon` (e.g. `uprcl`, `qobuz`, `upradios`...), and the rest would depend on the plugin
type.


[[plgmicrohttphost]]
plgmicrohttphost:: Hostname/IP address used in proxy URLs. The default is to use the same host/address as the UPnP
server. Using localhost/127.0.0.1 instead loses the ability to stream to
a remote renderer, but allows for portable playlists.

[[plgmicrohttpport]]
plgmicrohttpport:: IP port for the tidal/qobuz local HTTP service. The URLs for tracks streamed from these services point to a local
microhttpd server running on this port (it uses redirection to the actual
service URL when actually streaming). The default is 49149.

[[plgproxymethod]]
plgproxymethod:: Decide if we proxy (copy: fetch/serve), or redirect the streaming
services streams. Using redirect is much more efficient,
but the proxy has a facility to retry when a stream is dropped by the
service, which seems to happen esp. with Qobuz.

[[msiconpath]]
msiconpath:: Path to the Media Server icon. The image will be displayed by Control Points which support
it. Due to current (and probably permanent) *upmpdcli* limitations, the
image file *must* be a 64x64 32 bits-per-pixel png file. Default: '$pkgdatadir/icon.png'.
The icon will only be read once, when upmpdcli starts up.

[[webserverdocumentroot]]
webserverdocumentroot:: Path from which the UPnP HTTP server will serve files: 0:none, 1:auto, abs. path: use
it. Some Mediaserver plugins need it, e.g. for serving icon files or cached data. The default
value is 1, resulting into an actual path of /var/cache/upmpdcli/www or ~/.cache/upmpdcli/www.


=== Highresaudio streaming service parameters 

[[hrauser]]
hrauser:: Hra user name. Your Hra login name.

[[hrapass]]
hrapass:: Hra password. The password for your Hra account.

[[hralang]]
hralang:: Hra language setting
(en/de). Some Highresaudio messages will be set in the
appropriate language.

[[hratitle]]
hratitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

=== Qobuz streaming service parameters 

[[qobuzuser]]
qobuzuser:: Qobuz user name. Your Qobuz login name.

[[qobuzpass]]
qobuzpass:: Qobuz password. The password for your Qobuz account.

[[qobuzformatid]]
qobuzformatid:: Qobuz stream quality. 5 for mp3/320, 6 for FLAC, 7 FLAC 24/96, 27 for hi-res (if your subscription
allows streaming each of the formats).

[[qobuzrenumtracks]]
qobuzrenumtracks:: Qobuz track renumbering. Renumber tracks by counting elements, avoiding issues with Kodi. Enabled by default.

[[qobuzexplicititemnumbers]]
qobuzexplicititemnumbers:: Explicit item numbers in brackets. Add item numbers in square brackes in lists, mostly for kodi compatibility/usability. Disabled by default.

[[qobuzprependartisttoalbum]]
qobuzprependartisttoalbum:: Artist name before albums in album lists. Prepend artist to album in album lists, mostly for kodi compatibility/usability. Disabled by default.

[[qobuztitle]]
qobuztitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

=== Tidal streaming service parameters 

[[tidaluser]]
tidaluser:: Bogus user name variable. Decides if the service should be started. Set it to any arbitrary value.

[[tidaltokentype]]
tidaltokentype:: Oath2 authentication token type. The type of token used for OAUTH2 authentication, typically Bearer.

[[tidalaudioquality]]
tidalaudioquality:: Tidal maximum stream quality. LOW for mp3/96, HIGH for mp3/320, LOSSLESS for FLAC 16/44, HI_RES for FLAC up to 24/48,
HI_RES_LOSSLESS for hi-res FLAC files (if your subscription allows streaming each of the
formats).

[[tidaltitle]]
tidaltitle:: Plugin Title. This will be displayed as the plugin entry in the Media Server root
directory.

[[tidalprependnumberinitemlist]]
tidalprependnumberinitemlist:: Use item numbers in album lists for kodi compatibility Kodi always tries to sort things, with this parameter we force it to show
the entries in the desired order.

[[tidalenableimagecaching]]
tidalenableimagecaching:: Enables image caching, requires webdocumentroot Allows the plugin to cache images for Artists and Albums, requires
webdocumentroot and some disk space, recommended

[[tidalsearchlimit]]
tidalsearchlimit:: Tidal search limit Set the maximum numbers of item returned by
search, defaults to 15

[[tidaloverridecountrycode]]
tidaloverridecountrycode:: Override the country code. This will allow you to specify the desired two-letter country code.
When not specified, it should default to the country code of the profile.

=== UPRCL Local Media Server parameters 

[[uprcluser]]
uprcluser:: Bogus user name variable. Used for consistency with other Media Server plugins to decide if the service should be
started (so, do set it if you want a Media Server). You probably also want to set uprclautostart=1
so that initialisation starts as soon as the program does.

[[uprcltitle]]
uprcltitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

[[uprclmediadirs]]
uprclmediadirs:: Media directories This is a space-separated list of directories to explore for music
files. This is used directly as the recoll "topdirs" value, so you can use
double-quote quoting for paths with embedded spaces. If not set, we will try
to use contentDirs from the Minim config. An error will occur if both are
empty.

[[uprclnoradioconf]]
uprclnoradioconf:: Don't make the local radio list as a playlist. By default, uprcl will process the local radio list and make it available as a playlist (in
the Playlists top container). This can slow down the initialisation and is useless if the upradios
plugin is also running, so you can disable it with this variable.

[[uprclhostport]]
uprclhostport:: Uprcl HTTP server host and port for serving media files. Uprcl uses a separate HTTP server based on the Python Bottle framework
and Waitress server. The HTTP server will listen on this address and port, which
will also be inserted on the URLs we produce. If the variable is not set, we
will use port 9090 and the same address as the server used for other services
(either plgmicrohttphost or the first ipv4 address used by the upnp layer.
not. Example: 192.168.1.1:9090. As it is reasonable to use the same address as
the upnp layer, see also uprclport for just specifying the port.

[[uprclport]]
uprclport:: Uprcl HTTP server port for serving media files. Port to use for listening for media requests. The listen address will
be either plgmicrohttphost if it is set, or the first ipv4 address used by the
upnp layer. Ignored if uprclhostport is set.

[[uprclconfdir]]
uprclconfdir:: uprcl Recoll index directory This is usually not defined and defaults to
/var/cache/upmpdcli/uprcl. The name is a bit misleading because there is
little real configuration data in there: it's mostly programmatically
generated from actual configuration found elsewhere (but also see
uprclconfrecolluser).

[[uprclconfrecolluser]]
uprclconfrecolluser:: Name of the user Recoll config additions file This is the name of a file with additional parameters for the
uprcl recoll.conf file, to which the contents will be appended before
indexing. The default is /var/cache/upmpdcli/uprcl/recoll.conf.user. If
set, should be an absolute path.

[[uprclminimconfig]]
uprclminimconfig:: Name of the Minim Server configuration file If set, this is the name of a Minim Server configuration file from
which we should fetch parameters like aliasTags, etc. (See the
manual). Not set by default, and optional.

[[uprclnotagview]]
uprclnotagview:: Suppress folder "Tag View" entries. The "Tag View" entry allow browsing a subdirectory by tags. It can be quite useful but also
a problem with some Control Points, or kinds of usage.

[[uprclpaths]]
uprclpaths:: Path translations. Translations from real paths to ones relative to the HTTP server
doc tree. If this is not set, uprcl will use a null translation for each
of the uprclmediadirs entries.

=== Upmpdcli Radios plugin parameters 

[[upradiosuser]]
upradiosuser:: Bogus user name variable. Used for consistency with other Media Server plugins to decide if
the service should be started (so, do set it if you want to see the radio list).


[[upradiostitle]]
upradiostitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

[[upradiosmaxthreads]]
upradiosmaxthreads:: Maximum number of threads to use while initializing the radio list Most radios are defined by playlist files which may need several network interactions
before the actual URL usable by the control point can be reached. We use multiple threads to speed
up this process, this is the maximum thread count.

=== Radio Browser (https://www.radio-browser.info/) plugin parameters 

[[radio-browseruser]]
radio-browseruser:: Bogus user name variable. Decides if the service should be started. Set it to any arbitrary value.

[[radio-browsertitle]]
radio-browsertitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

[[radio-browseripinfotoken]]
radio-browseripinfotoken:: IPInfo token. Set your ipinfo
token in order to have the shortcut to the local radios.

[[radio-browsercountry]]
radio-browsercountry:: The preferred country. Set this
to the preferred country in order to have the shortcut to the local radios.
This is alternative to using the ipinfo token.
The values is to be specified in the form of a country code, e.g. `FR`, `IT`, etc.

=== Radio Paradise (https://www.radioparadise.com/) plugin parameters 

[[radio-paradiseuser]]
radio-paradiseuser:: Bogus user name variable. Decides if the service should be started. Set it to any arbitrary value.

[[radio-paradisetitle]]
radio-paradisetitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

=== Mother Earth Radio (https://www.motherearthradio.de/) plugin parameters 

[[mother-earth-radiouser]]
mother-earth-radiouser:: Bogus user name variable. Decides if the service should be started. Set it to any arbitrary value.

[[mother-earth-radiotitle]]
mother-earth-radiotitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

=== SubSonic plugin parameters 

[[subsonicuser]]
subsonicuser:: SubSonic User name variable. Decides if the service should be started. Set it to the appropriate user name.

[[subsonicpassword]]
subsonicpassword:: SubSonic Password variable. Required for SubSonic authentication. Set it to the appropriate password.

[[subsoniclegacyauth]]
subsoniclegacyauth:: SubSonic legacy authentication mode. Required for SubSonic authentication with some servers (e.g. lms). Set to 1 to enable.

[[subsonicbaseurl]]
subsonicbaseurl:: SubSonic server base url. URL of the server, without the port. Specify http or https

[[subsonicport]]
subsonicport:: SubSonic server port. The port of the SubSonic server

[[subsonicitemsperpage]]
subsonicitemsperpage:: SubSonic items per page Number of items per page for SubSonic

[[subsoniccachetimeoutartists]]
subsoniccachetimeoutartists:: SubSonic cache timeout for artists Cache timeout for artists, defaults to 600

[[subsonicappendyeartoalbumcontainer]]
subsonicappendyeartoalbumcontainer:: Append year to album container If enabled, the year will be appended to the album as a container. Enabled by default.

[[subsonicappendyeartoalbumview]]
subsonicappendyeartoalbumview:: Append year to album view If enabled, the year will be appended to the album view. Disabled by default.

[[subsonicappendyeartoalbumsearchres]]
subsonicappendyeartoalbumsearchres:: Append year to album as search result If enabled, the year will be appended to the album as a search result. Disabled by default.

[[subsonictranscodecodec]]
subsonictranscodecodec:: Enable transcoding If a value is set, it will be used as the codec for the transcoding process

[[subsonictranscodemaxbitrate]]
subsonictranscodemaxbitrate:: Set max bitrate for transcoding If a value is set, it will be used as the max bitrate for the transcoding process

[[subsonicserversidescrobbling]]
subsonicserversidescrobbling:: Enable server-side scrobbling If enabled, we will scrobble the song when streaming starts. Disabled by default.

[[subsonicprependnumberinalbumlist]]
subsonicprependnumberinalbumlist:: Add a progressive number to album in album lists. Mostly for Kodi compatibility and usability. Enabled by default.

[[subsonictaginitialpageenabledir]]
subsonictaginitialpageenabledir:: Subsonic enable Internet Radios Enables Internet Radios. Disabled by default, upmpdcli offers multiple ways of handling
Internet Radios

[[subsonicshowemptyfavorites]]
subsonicshowemptyfavorites:: Subsonic show empty Favorites entries Force entries for Favorites, even if there are no Favorites,
disabled by default

[[subsonicshowemptyplaylists]]
subsonicshowemptyplaylists:: Subsonic show empty Playlists entry Force entry for Playlists, even if there are no Playlists,
disabled by default

[[subsonictitle]]
subsonictitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

[[subsonicallowappendgenreinalbumview]]
subsonicallowappendgenreinalbumview:: Subsonic show genres in album view Show Genres in album view, disabled by defaults

[[subsonicallowgenreinalbumcontainer]]
subsonicallowgenreinalbumcontainer:: Subsonic show genres in album container entry Show Genres in album container, used in album lists, disabled by defaults

=== Upmpdcli BBC Sounds plugin parameters 

[[bbcuser]]
bbcuser:: Bogus user name variable. Set this to activate the plugin, the value is ignored.


[[bbcprogrammedays]]
bbcprogrammedays:: Past days in BBC Sounds catalog listing. This controls how many days are listed in the station displays.

[[bbctitle]]
bbctitle:: Plugin Title. This
will be displayed as the plugin entry in the Media Server root
directory.

=== Songcast Receiver parameters 

[[sclogfilename]]
sclogfilename:: Log file name for sc2mpd (default
stderr) The value *must not* be the same as the one used
for upmpdcli (except if empty).

[[scloglevel]]
scloglevel:: Log verbosity for
sc2mpd. 

[[scplaymethod]]
scplaymethod:: sc2mpd
play method (mpd/alsa). With this set as 'alsa', sc2mpd
will send the audio directly to the sound driver, which is the only way
to really avoid skips and control the synchronization in multi-room
setups. *For 'alsa', make sure that user upmpdcli has permission to
access the audio devices !*

[[schttpport]]
schttpport:: Port
used by sc2mpd for MPD to connect to. Used only for
scplaymethod=mpd. sc2mpd only accepts connections from
localhost.

[[scalsadevice]]
scalsadevice:: Alsa device used by sc2mpd
for playing audio. Only used for scplaymethod=alsa.
Use 'aplay -L' to see the possible values.

[[sccvttype]]
sccvttype:: sc2mpd resampling method. 
Only used for scplaymethod=alsa. sc2mpd uses libsamplerate. The default
method is SRC_SINC_FASTEST and a Rasberry Pi 1 is fast enough to use it.
Possible values: SRC_SINC_BEST_QUALITY, SRC_SINC_MEDIUM_QUALITY,
SRC_SINC_FASTEST, SRC_ZERO_ORDER_HOLD, SRC_LINEAR.  See the libsamplerate
documentation for descriptions. Anything above SRC_SINC_FASTEST needs a
serious CPU.  BEST_QUALITY uses approx 25% cpu on a core i7
4770T. Obviously too much, actually might not be sustainable (it's almost
100% of 1 cpu).  MEDIUM_QUALITY is around 10% on the same machine,
FASTEST is 4-5%. Given that this is measured for the full process, probably
a couple % for the conversion in fact. NONE will turn resampling off:
minimum CPU and best quality, but guaranteed glitches from time
to time, depending on the clocks skew.

[[scusempdvolume]]
scusempdvolume:: Scale songcast stream based on mpd volume value Allow controlling the volume from the Control Point by scaling the
stream according to the mpd volume value. Only works when scplaymethod is 'alsa'.


[[sc2mpd]]
sc2mpd:: Path to
sc2mpd. Only useful if it is not in /usr/bin and the
location is not in the $PATH for the init scripts.

[[screceiverstatefile]]
screceiverstatefile:: Path to a screceiver
state file. If set, the sender uri and metadata will be read
from the file when initializing the Songcast Receiver service and written to
the file when a Sender is set for the service. Useful for preserving the
sender information between restarts.

=== Songcast Sender parameters 

[[scstreamcodec]]
scstreamcodec:: !!Standard Songcast receivers only support PCM!! Codec to use for
the network stream. Set to empty or PCM to support
foreign receivers. Or use FLAC or OPUS for lower network
load.

[[scsenderpath]]
scsenderpath:: Path to starter script This is normally scmakempdsender which starts the auxiliary mpd
and the sender process. Empty and searched in the PATH by
default.

[[scstreamscaled]]
scstreamscaled:: Scale the
Songcast stream. If set, MPD software volume control will
be applied to the stream. True by default: using a Control Point to set
the volume on the upmpdcli instance which started the Sender affects the
volume for all Receivers.

[[scsendermpdport]]
scsendermpdport:: localhost port to be used by the auxiliary mpd. 

[[scripts_dir]]
scripts_dir:: External sources script
directory. Location for the scripts used to set up
additional external sources. See the Songcast Sender support
documentation page.

[[scscriptgracesecs]]
scscriptgracesecs:: Grace period to wait for a script process to exit before it is
forcely killed. In seconds. Default 2 S.


